@startuml

class App
class Application
class Task
class TaskList
class FXMLController
class FileUtils
class DateUtils
class Logger
enum StatusType

App -- TaskList
Logger -- App
TaskList -- Task
StatusType -- Task
StatusType -- App
FXMLController -- App
DateUtils -- Task
FileUtils -- TaskList

class App extends Application {
Main Application that will handle
all external and internal events.
__ Attributes __
- ArrayList<TaskList> lists
__ Methods __
+ {static} start()
+ {static} void main()
+ {static} importTaskList()
+ {static} exportTaskList()
}

class Task {
Data Class for storing Task Information.
__ Attributes __
- StatusType status
- String description
- Date dueDate
__ Methods __
+ StatusType getStats()
+ String getDescription()
+ Date getDueDate()
}

class TaskList {
Data Class for storing Tasks.
Contains some similar interfaces
to that of an array list but not
enough to consider implementation.
__ Attributes __
- ArrayList<Task> tasks
- String name
__ Methods __
+ ArrayList<Task> getTasks()
+ String getName()
+ boolean containsTask()
}

class Application {
Application class from
which JavaFX applications extend.
}

class FXMLController {
Application class for JavaFX
that handles events that happen
through buttons, text fields, etc.
}

enum StatusType {
    Defines the current status of a Task
    --
    COMPLETE
    NOT_COMPLETE
    ALL
}

class Logger {
    A Utils class used for Debugging.
    Not used in final product.

    "debug" determines if statements are printed.
    --
    + boolean debug
    --
}

class DateUtils {
Utils class used for parsing String into
Date Objects and handles improper input.
--
- DateUtils instance;
--
+ {static} Date parse();
}

class FileUtils {
Utils class used for reading and writing to Files.
--
- FileUtils instance;
--
+ {static} Date read();
+ {static} Date write();

}

@enduml